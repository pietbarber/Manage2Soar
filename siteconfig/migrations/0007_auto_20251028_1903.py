# Generated by Django 5.2.6 on 2025-10-28 23:03

from django.db import migrations


def populate_membership_statuses(apps, schema_editor):
    """Populate the MembershipStatus table with initial data from constants."""
    MembershipStatus = apps.get_model('siteconfig', 'MembershipStatus')

    # Define the initial membership statuses with their properties
    # These are based on the constants from members.constants.membership
    statuses = [
        # Active statuses (is_active=True)
        {"name": "Charter Member", "is_active": True, "sort_order": 10},
        {"name": "Full Member", "is_active": True, "sort_order": 20},
        {"name": "Probationary Member", "is_active": True, "sort_order": 30},
        {"name": "FAST Member", "is_active": True, "sort_order": 40},
        {"name": "Introductory Member", "is_active": True, "sort_order": 50},
        {"name": "Affiliate Member", "is_active": True, "sort_order": 60},
        {"name": "Family Member", "is_active": True, "sort_order": 70},
        {"name": "Service Member", "is_active": True, "sort_order": 80},
        {"name": "Student Member", "is_active": True, "sort_order": 90},
        {"name": "Transient Member", "is_active": True, "sort_order": 100},
        {"name": "Emeritus Member", "is_active": True, "sort_order": 110},
        {"name": "Honorary Member", "is_active": True, "sort_order": 120},
        {"name": "Founding Member", "is_active": True, "sort_order": 130},
        {"name": "SSEF Member", "is_active": True, "sort_order": 140},
        {"name": "Temporary Member", "is_active": True, "sort_order": 150},

        # Inactive statuses (is_active=False)
        {"name": "Inactive", "is_active": False, "sort_order": 200},
        {"name": "Non-Member", "is_active": False, "sort_order": 210},
        {"name": "Pending", "is_active": False, "sort_order": 220},
        {"name": "Deceased", "is_active": False, "sort_order": 300},
    ]

    for status_data in statuses:
        MembershipStatus.objects.get_or_create(
            name=status_data["name"],
            defaults={
                "is_active": status_data["is_active"],
                "sort_order": status_data["sort_order"],
                "description": ""
            }
        )


def reverse_populate_membership_statuses(apps, schema_editor):
    """Remove all membership statuses (reverse operation)."""
    MembershipStatus = apps.get_model('siteconfig', 'MembershipStatus')
    MembershipStatus.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("siteconfig", "0006_membershipstatus"),
    ]

    operations = [
        migrations.RunPython(
            populate_membership_statuses,
            reverse_populate_membership_statuses
        ),
    ]
