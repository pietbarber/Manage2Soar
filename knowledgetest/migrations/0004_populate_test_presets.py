# Generated by Django 5.2.6 on 2025-10-29 00:32

from django.db import migrations


def populate_test_presets(apps, schema_editor):
    """Populate TestPreset with existing hardcoded presets from views.py"""
    TestPreset = apps.get_model('knowledgetest', 'TestPreset')

    # Existing presets from the hardcoded get_presets() function
    presets_data = [
        {
            'name': 'ASK21',
            'description': 'ASK-21 glider type rating test - includes aircraft-specific questions plus fundamentals',
            'category_weights': {
                "ACRO": 0,
                "AIM": 5,
                "AMF": 0,
                "ASK21": 19,
                "DO": 0,
                "Discus": 0,
                "FAR": 5,
                "GF": 10,
                "GFH": 10,
                "GNDOPS": 5,
                "PW5": 0,
                "SSC": 5,
                "ST": 5,
                "WX": 4,
            },
            'sort_order': 10,
            'is_active': True,
        },
        {
            'name': 'PW5',
            'description': 'PW-5 glider type rating test - includes aircraft-specific questions plus fundamentals',
            'category_weights': {
                "ACRO": 0,
                "AIM": 5,
                "AMF": 5,
                "ASK21": 0,
                "DO": 0,
                "Discus": 0,
                "FAR": 5,
                "GF": 10,
                "GFH": 10,
                "GNDOPS": 5,
                "PW5": 24,
                "SSC": 5,
                "ST": 5,
                "WX": 4,
            },
            'sort_order': 20,
            'is_active': True,
        },
        {
            'name': 'DISCUS',
            'description': 'Discus glider type rating test - includes aircraft-specific questions',
            'category_weights': {
                "ACRO": 0,
                "AIM": 0,
                "AMF": 0,
                "ASK21": 0,
                "DO": 0,
                "Discus": 22,
                "FAR": 5,
                "GF": 10,
                "GFH": 0,
                "GNDOPS": 5,
                "PW5": 0,
                "SSC": 0,
                "ST": 5,
                "WX": 0,
            },
            'sort_order': 30,
            'is_active': True,
        },
        {
            'name': 'ACRO',
            'description': 'Aerobatics test - focused on aerobatic maneuvers and safety',
            'category_weights': {
                "ACRO": 30
            },
            'sort_order': 40,
            'is_active': True,
        },
        {
            'name': 'EMPTY',
            'description': 'Empty template - no questions pre-selected, allows manual question selection',
            'category_weights': {},
            'sort_order': 100,
            'is_active': True,
        },
    ]

    for preset_data in presets_data:
        TestPreset.objects.create(**preset_data)


def reverse_populate_test_presets(apps, schema_editor):
    """Remove all test presets"""
    TestPreset = apps.get_model('knowledgetest', 'TestPreset')
    TestPreset.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("knowledgetest", "0003_add_test_presets"),
    ]

    operations = [
        migrations.RunPython(
            populate_test_presets,
            reverse_populate_test_presets,
        ),
    ]
